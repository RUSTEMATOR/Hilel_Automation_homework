from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
import time
import requests
import pytest

url = "https://qauto2.forstudy.space/api/auth/users"

data = {
            "name": "Alex",
            "lastname": "Flex",
            "email": "crazybizygaga@gmail.com",
            "password": "193786Az"
        }

class TestBase():
    
    def setup_method(self):
        self._driver = webdriver.Chrome()
        self._session = requests.Session()

    def teardown_method(self):
        try:
            response = self._session.delete(url, json=data)
            print("Delete request response:", response.text)
        except Exception as e:
            print("Error during teardown:", str(e))
        finally:
            if self._driver:
                self._driver.quit()
            if self._session:
            # Perform session cleanup if needed
                pass
        
 
class Registration(TestBase):
        
    def open_link(self):
        driver = self._driver
        link = "https://guest:welcome2qauto@qauto2.forstudy.space"
        driver.get(link)
        print("Linked opened")
            
    #open the registration form
    def page_access(self):
        driver = self._driver
        sign_in_button = driver.find_element(By.XPATH, "/html/body/app-root/app-global-layout/div/div/app-header/header/div/div/div[2]/button[2]" )
        sign_in_button.click()
    
    def registration1(self):
        driver = self._driver
        registration_button = driver.find_element(By.XPATH, "/html/body/ngb-modal-window/div/div/app-signin-modal/div[3]/button[1]")
        registration_button.click()
        
    #fill in name input
    def fill_name(self):
        driver = self._driver
        name = driver.find_element(By.ID, "signupName")
        name.send_keys("Alex")
        print("Name input filled")
    
    #fill in surname
    def last_name(self):
        driver = self._driver
        last_name = driver.find_element(By.ID, "signupLastName")
        last_name.send_keys("Flex")
        print("Surname input filled")
        

    #fill in email input   
    def fill_in_email(self):
        driver = self._driver
        email = driver.find_element(By.XPATH, "/html/body/ngb-modal-window/div/div/app-signup-modal/div[2]/app-signup-form/form/div[3]/input")
        email.send_keys("crazybizygaga@gmail.com")
        print("Email input filled")
        
    #fill in password input
    def fill_in_password(self):
        driver = self._driver
        password = driver.find_element(By.XPATH, "/html/body/ngb-modal-window/div/div/app-signup-modal/div[2]/app-signup-form/form/div[4]/input")
        password.send_keys("193786Az")
        print("Password input filled")
    
    #confirm password
    
    def confirm_pass(self):
        driver = self._driver
        confirm = driver.find_element(By.ID, "signupRepeatPassword")
        confirm.send_keys("193786Az")
        print("Password input filled")
        
    #press on register button
    def register(self):
        driver = self._driver
        register_button = driver.find_element(By.XPATH, "/html/body/ngb-modal-window/div/div/app-signup-modal/div[3]/button")
        register_button.click()
    
    def teardown_method(self):
        url = "https://qauto2.forstudy.space/api/auth/users"
        data = {
            "name": "Alex",
            "lastname": "Flex",
            "email": "crazybizygaga@gmail.com",
            "password": "193786Az"
        }
        response = self._session.delete(url, json=data)
        print("Delete request response:", response.text)
        
        

if __name__ == "__main__":
    registration = Registration()
    registration.setup_method()
    registration.open_link()
    registration.page_access()
    registration.registration1()
    registration.fill_name()
    registration.last_name()
    registration.fill_in_email()
    registration.fill_in_password()
    registration.confirm_pass()
    registration.register()
    registration.teardown_method()
    
    #added intentionally! in order to check the result and make a video 
    time.sleep(120)
